blueapi:
  hostNetwork: false
  resources:
    limits:
      cpu: 2000m
      memory: 4000Mi
    requests:
      cpu: 500m
      memory: 400Mi
  nodeSelector:
    kubernetes.io/hostname: bl46p-ea-serv-01.diamond.ac.uk
  tolerations:
    - key: nodetype
      operator: Equal
      value: training-rig
      effect: NoSchedule
    - key: beamline
      operator: Equal
      value: bl46p
      effect: NoSchedule
  ingress:
    enabled: false
    hosts:
      - host: p46-blueapi.diamond.ac.uk
        paths:
          - path: /
            pathType: Prefix
  extraEnvVars:
    - name: BEAMLINE
      value: p46
    - name: INSTRUMENT
      value: p46

  tracing:
    otlp:
      enabled: true
      server:
        host: http://opentelemetry-collector.tracing

  worker:
    numtracker:
      url: https://numtracker.diamond.ac.uk/graphql
    env:
      metadata:
        instrument: p46
      sources:
        - kind: dodal
          module: dodal.beamlines.training_rig
        - kind: planFunctions
          module: htss_rig_bluesky.plans
        - kind: planFunctions
          module: dodal.plans
      events:
        broadcast_status_events: False
    stomp:
      auth:
        username: guest
        password: guest
      url: tcp://p46-rabbitmq-daq.diamond.ac.uk:61613
      enabled: true
    logging:
      level: "INFO"
      graylog:
        enabled: true
    oidc:
      well_known_url: "https://authn.diamond.ac.uk/realms/master/.well-known/openid-configuration"
      client_id: "blueapi-cli"
      logout_redirect_endpoint: "oauth2/sign_out"
    scratch:
      root: /dls_sw/htss/p46/scratch
      repositories:
        - name: dodal
          remote_url: https://github.com/DiamondLightSource/dodal.git
        - name: htss-rig-bluesky
          remote_url: https://github.com/DiamondLightSource/htss-rig-bluesky.git
  initContainer:
    enabled: true
    persistentVolume:
      enabled: true
      # existingClaimName: foo

oauth2:
  proxyVarsAsSecrets: false
  extraEnv:
    - name: OAUTH2_PROXY_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: blueapi-secret
          key: client-secret
    - name: OAUTH2_PROXY_COOKIE_SECRET
      valueFrom:
        secretKeyRef:
          name: blueapi-secret
          key: cookie-secret
  config:
    configFile: |-
      skip_provider_button = true
      skip_jwt_bearer_tokens = true
      cookie_refresh="1m"
      cookie_expire="30m"
      email_domains = [ "*" ]
      skip_auth_routes=[
      "GET=^/config/oidc",
      "GET=^/healthz"
      ]
      whitelist_domains=["authn.diamond.ac.uk"]
  ingress:
    enabled: true
    hosts:
      - p46-blueapi.diamond.ac.uk
    annotations:
      nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    path: /
    pathType: Prefix
  alphaConfig:
    enabled: true
    configData:
      upstreamConfig:
        proxyRawPath: true
        upstreams:
          - id: blueapi
            path: /
            uri: http://p46-blueapi
      providers:
        - provider: oidc
          id: authn.diamond.ac.uk
          clientID: blueapi
          clientSecret: ${OAUTH2_PROXY_CLIENT_SECRET}
          oidcConfig:
            insecureAllowUnverifiedEmail: true
            emailClaim: sub
            audienceClaims: ["aud"]
            extraAudiences: ["blueapi"]
            issuerURL: https://authn.diamond.ac.uk/realms/master
      injectRequestHeaders:
        - name: Authorization
          values:
            - claim: access_token
              prefix: "Bearer "
      injectResponseHeaders:
        - name: Identity
          values:
            - claim: access_token
